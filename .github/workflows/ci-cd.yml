name: ci-cd pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    
  security-checks:
    runs-on: ubuntu-latest
    needs: compile

    steps:
    - uses: actions/checkout@v4
    - name: Trivy Installation
      run:  |
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y
    - name: Trivy FS scan
      run: trivy fs --format table -o fs-report.json .

    - name: Gitleaks Installation   # any kind of sensitive hardcoding data in source code lie api token, secret keys, credentilas etc.
      run: sudo apt install gitleaks -y
    - name: Gitleaks Code Scan
      run: gitleaks detect source . -r gitleaks-report.json -f json  # report generate in json format and create seperate file
